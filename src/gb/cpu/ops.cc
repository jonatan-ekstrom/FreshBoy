#include "ops.h"
#include "cpu.h"
#include "registers.h"

namespace gb {

Ops::Ops(Cpu_& cpu)
    : cpu{cpu}, alu{cpu}, bit{cpu}, flow{cpu}, mem{cpu}, spec{cpu} {}

void Ops::Execute(const u8 opcode) {
    switch (opcode) {
        case 0x00: spec.Nop(); break;
        case 0x01: mem.Load(cpu.bc, cpu.GetWord()); break;
        case 0x02: mem.Load(cpu.bc, cpu.a); break;
        case 0x03: alu.Inc(cpu.bc); break;
        case 0x04: alu.Inc(cpu.b); break;
        case 0x05: alu.Dec(cpu.b); break;
        case 0x06: mem.Load(cpu.b, cpu.GetByte()); break;
        case 0x07: bit.Rlca(); break;
        case 0x08: mem.Load(cpu.GetWord(), cpu.sp); break;
        case 0x09: alu.Add(cpu.hl, cpu.bc); break;
        case 0x0A: mem.Load(cpu.a, cpu.bc); break;
        case 0x0B: alu.Dec(cpu.bc); break;
        case 0x0C: alu.Inc(cpu.c); break;
        case 0x0D: alu.Dec(cpu.c); break;
        case 0x0E: mem.Load(cpu.c, cpu.GetByte()); break;
        case 0x0F: bit.Rrca(); break;
        case 0x10: spec.Stop(); break;
        case 0x11: mem.Load(cpu.de, cpu.GetWord()); break;
        case 0x12: mem.Load(cpu.de, cpu.a); break;
        case 0x13: alu.Inc(cpu.de); break;
        case 0x14: alu.Inc(cpu.d); break;
        case 0x15: alu.Dec(cpu.d); break;
        case 0x16: mem.Load(cpu.d, cpu.GetByte()); break;
        case 0x17: bit.Rla(); break;
        case 0x18: flow.RelJump(cpu.GetSignedByte()); break;
        case 0x19: alu.Add(cpu.hl, cpu.de); break;
        case 0x1A: mem.Load(cpu.a, cpu.de); break;
        case 0x1B: alu.Dec(cpu.de); break;
        case 0x1C: alu.Inc(cpu.e); break;
        case 0x1D: alu.Dec(cpu.e); break;
        case 0x1E: mem.Load(cpu.e, cpu.GetByte()); break;
        case 0x1F: bit.Rra(); break;
        case 0x20: flow.RelJump(Condition::NZ, cpu.GetSignedByte()); break;
        case 0x21: mem.Load(cpu.hl, cpu.GetWord()); break;
        case 0x22: mem.LoadInc(cpu.hl, cpu.a); break;
        case 0x23: alu.Inc(cpu.hl); break;
        case 0x24: alu.Inc(cpu.h); break;
        case 0x25: alu.Dec(cpu.h); break;
        case 0x26: mem.Load(cpu.h, cpu.GetByte()); break;
        case 0x27: spec.Daa(); break;
        case 0x28: flow.RelJump(Condition::Z, cpu.GetSignedByte()); break;
        case 0x29: alu.Add(cpu.hl, cpu.hl); break;
        case 0x2A: mem.LoadInc(cpu.a, cpu.hl); break;
        case 0x2B: alu.Dec(cpu.hl); break;
        case 0x2C: alu.Inc(cpu.l); break;
        case 0x2D: alu.Dec(cpu.l); break;
        case 0x2E: mem.Load(cpu.l, cpu.GetByte()); break;
        case 0x2F: spec.Cpl(); break;
        case 0x30: flow.RelJump(Condition::NC, cpu.GetSignedByte()); break;
        case 0x31: mem.Load(cpu.sp, cpu.GetWord()); break;
        case 0x32: mem.LoadDec(cpu.hl, cpu.a); break;
        case 0x33: alu.Inc(cpu.sp); break;
        case 0x34: alu.IncRef(cpu.hl); break;
        case 0x35: alu.DecRef(cpu.hl); break;
        case 0x36: mem.Load(cpu.hl, cpu.GetByte()); break;
        case 0x37: spec.Scf(); break;
        case 0x38: flow.RelJump(Condition::C, cpu.GetSignedByte()); break;
        case 0x39: alu.Add(cpu.hl, cpu.sp); break;
        case 0x3A: mem.LoadDec(cpu.a, cpu.hl); break;
        case 0x3B: alu.Dec(cpu.sp); break;
        case 0x3C: alu.Inc(cpu.a); break;
        case 0x3D: alu.Dec(cpu.a); break;
        case 0x3E: mem.Load(cpu.a, cpu.GetByte()); break;
        case 0x3F: spec.Ccf(); break;
        case 0x40: mem.Load(cpu.b, cpu.b); break;
        case 0x41: mem.Load(cpu.b, cpu.c); break;
        case 0x42: mem.Load(cpu.b, cpu.d); break;
        case 0x43: mem.Load(cpu.b, cpu.e); break;
        case 0x44: mem.Load(cpu.b, cpu.h); break;
        case 0x45: mem.Load(cpu.b, cpu.l); break;
        case 0x46: mem.Load(cpu.b, cpu.hl); break;
        case 0x47: mem.Load(cpu.b, cpu.a); break;
        case 0x48: mem.Load(cpu.c, cpu.b); break;
        case 0x49: mem.Load(cpu.c, cpu.c); break;
        case 0x4A: mem.Load(cpu.c, cpu.d); break;
        case 0x4B: mem.Load(cpu.c, cpu.e); break;
        case 0x4C: mem.Load(cpu.c, cpu.h); break;
        case 0x4D: mem.Load(cpu.c, cpu.l); break;
        case 0x4E: mem.Load(cpu.c, cpu.hl); break;
        case 0x4F: mem.Load(cpu.c, cpu.a); break;
        case 0x50: mem.Load(cpu.d, cpu.b); break;
        case 0x51: mem.Load(cpu.d, cpu.c); break;
        case 0x52: mem.Load(cpu.d, cpu.d); break;
        case 0x53: mem.Load(cpu.d, cpu.e); break;
        case 0x54: mem.Load(cpu.d, cpu.h); break;
        case 0x55: mem.Load(cpu.d, cpu.l); break;
        case 0x56: mem.Load(cpu.d, cpu.hl); break;
        case 0x57: mem.Load(cpu.d, cpu.a); break;
        case 0x58: mem.Load(cpu.e, cpu.b); break;
        case 0x59: mem.Load(cpu.e, cpu.c); break;
        case 0x5A: mem.Load(cpu.e, cpu.d); break;
        case 0x5B: mem.Load(cpu.e, cpu.e); break;
        case 0x5C: mem.Load(cpu.e, cpu.h); break;
        case 0x5D: mem.Load(cpu.e, cpu.l); break;
        case 0x5E: mem.Load(cpu.e, cpu.hl); break;
        case 0x5F: mem.Load(cpu.e, cpu.a); break;
        case 0x60: mem.Load(cpu.h, cpu.b); break;
        case 0x61: mem.Load(cpu.h, cpu.c); break;
        case 0x62: mem.Load(cpu.h, cpu.d); break;
        case 0x63: mem.Load(cpu.h, cpu.e); break;
        case 0x64: mem.Load(cpu.h, cpu.h); break;
        case 0x65: mem.Load(cpu.h, cpu.l); break;
        case 0x66: mem.Load(cpu.h, cpu.hl); break;
        case 0x67: mem.Load(cpu.h, cpu.a); break;
        case 0x68: mem.Load(cpu.l, cpu.b); break;
        case 0x69: mem.Load(cpu.l, cpu.c); break;
        case 0x6A: mem.Load(cpu.l, cpu.d); break;
        case 0x6B: mem.Load(cpu.l, cpu.e); break;
        case 0x6C: mem.Load(cpu.l, cpu.h); break;
        case 0x6D: mem.Load(cpu.l, cpu.l); break;
        case 0x6E: mem.Load(cpu.l, cpu.hl); break;
        case 0x6F: mem.Load(cpu.l, cpu.a); break;
        case 0x70: mem.Load(cpu.hl, cpu.b); break;
        case 0x71: mem.Load(cpu.hl, cpu.c); break;
        case 0x72: mem.Load(cpu.hl, cpu.d); break;
        case 0x73: mem.Load(cpu.hl, cpu.e); break;
        case 0x74: mem.Load(cpu.hl, cpu.h); break;
        case 0x75: mem.Load(cpu.hl, cpu.l); break;
        case 0x76: spec.Halt(); break;
        case 0x77: mem.Load(cpu.hl, cpu.a); break;
        case 0x78: mem.Load(cpu.a, cpu.b); break;
        case 0x79: mem.Load(cpu.a, cpu.c); break;
        case 0x7A: mem.Load(cpu.a, cpu.d); break;
        case 0x7B: mem.Load(cpu.a, cpu.e); break;
        case 0x7C: mem.Load(cpu.a, cpu.h); break;
        case 0x7D: mem.Load(cpu.a, cpu.l); break;
        case 0x7E: mem.Load(cpu.a, cpu.hl); break;
        case 0x7F: mem.Load(cpu.a, cpu.a); break;
        case 0x80: alu.Add(cpu.b); break;
        case 0x81: alu.Add(cpu.c); break;
        case 0x82: alu.Add(cpu.d); break;
        case 0x83: alu.Add(cpu.e); break;
        case 0x84: alu.Add(cpu.h); break;
        case 0x85: alu.Add(cpu.l); break;
        case 0x86: alu.Add(cpu.hl); break;
        case 0x87: alu.Add(cpu.a); break;
        case 0x88: alu.AddWithCarry(cpu.b); break;
        case 0x89: alu.AddWithCarry(cpu.c); break;
        case 0x8A: alu.AddWithCarry(cpu.d); break;
        case 0x8B: alu.AddWithCarry(cpu.e); break;
        case 0x8C: alu.AddWithCarry(cpu.h); break;
        case 0x8D: alu.AddWithCarry(cpu.l); break;
        case 0x8E: alu.AddWithCarry(cpu.hl); break;
        case 0x8F: alu.AddWithCarry(cpu.a); break;
        case 0x90: alu.Sub(cpu.b); break;
        case 0x91: alu.Sub(cpu.c); break;
        case 0x92: alu.Sub(cpu.d); break;
        case 0x93: alu.Sub(cpu.e); break;
        case 0x94: alu.Sub(cpu.h); break;
        case 0x95: alu.Sub(cpu.l); break;
        case 0x96: alu.Sub(cpu.hl); break;
        case 0x97: alu.Sub(cpu.a); break;
        case 0x98: alu.SubWithBorrow(cpu.b); break;
        case 0x99: alu.SubWithBorrow(cpu.c); break;
        case 0x9A: alu.SubWithBorrow(cpu.d); break;
        case 0x9B: alu.SubWithBorrow(cpu.e); break;
        case 0x9C: alu.SubWithBorrow(cpu.h); break;
        case 0x9D: alu.SubWithBorrow(cpu.l); break;
        case 0x9E: alu.SubWithBorrow(cpu.hl); break;
        case 0x9F: alu.SubWithBorrow(cpu.a); break;
        case 0xA0: alu.And(cpu.b); break;
        case 0xA1: alu.And(cpu.c); break;
        case 0xA2: alu.And(cpu.d); break;
        case 0xA3: alu.And(cpu.e); break;
        case 0xA4: alu.And(cpu.h); break;
        case 0xA5: alu.And(cpu.l); break;
        case 0xA6: alu.And(cpu.hl); break;
        case 0xA7: alu.And(cpu.a); break;
        case 0xA8: alu.Xor(cpu.b); break;
        case 0xA9: alu.Xor(cpu.c); break;
        case 0xAA: alu.Xor(cpu.d); break;
        case 0xAB: alu.Xor(cpu.e); break;
        case 0xAC: alu.Xor(cpu.h); break;
        case 0xAD: alu.Xor(cpu.l); break;
        case 0xAE: alu.Xor(cpu.hl); break;
        case 0xAF: alu.Xor(cpu.a); break;
        case 0xB0: alu.Or(cpu.b); break;
        case 0xB1: alu.Or(cpu.c); break;
        case 0xB2: alu.Or(cpu.d); break;
        case 0xB3: alu.Or(cpu.e); break;
        case 0xB4: alu.Or(cpu.h); break;
        case 0xB5: alu.Or(cpu.l); break;
        case 0xB6: alu.Or(cpu.hl); break;
        case 0xB7: alu.Or(cpu.a); break;
        case 0xB8: alu.Cmp(cpu.b); break;
        case 0xB9: alu.Cmp(cpu.c); break;
        case 0xBA: alu.Cmp(cpu.d); break;
        case 0xBB: alu.Cmp(cpu.e); break;
        case 0xBC: alu.Cmp(cpu.h); break;
        case 0xBD: alu.Cmp(cpu.l); break;
        case 0xBE: alu.Cmp(cpu.hl); break;
        case 0xBF: alu.Cmp(cpu.a); break;
        case 0xC0: flow.Ret(Condition::NZ); break;
        case 0xC1: mem.Pop(cpu.bc); break;
        case 0xC2: flow.Jump(Condition::NZ, cpu.GetWord()); break;
        case 0xC3: flow.Jump(cpu.GetWord()); break;
        case 0xC4: flow.Call(Condition::NZ, cpu.GetWord()); break;
        case 0xC5: mem.Push(cpu.bc); break;
        case 0xC6: alu.Add(cpu.GetByte()); break;
        case 0xC7: flow.Rst(0); break;
        case 0xC8: flow.Ret(Condition::Z); break;
        case 0xC9: flow.Ret(); break;
        case 0xCA: flow.Jump(Condition::Z, cpu.GetWord()); break;
        case 0xCB: break; /* Invalid */
        case 0xCC: flow.Call(Condition::Z, cpu.GetWord()); break;
        case 0xCD: flow.Call(cpu.GetWord()); break;
        case 0xCE: alu.AddWithCarry(cpu.GetByte()); break;
        case 0xCF: flow.Rst(1); break;
        case 0xD0: flow.Ret(Condition::NC); break;
        case 0xD1: mem.Pop(cpu.de); break;
        case 0xD2: flow.Jump(Condition::NC, cpu.GetWord()); break;
        case 0xD3: break; /* Invalid */
        case 0xD4: flow.Call(Condition::NC, cpu.GetWord()); break;
        case 0xD5: mem.Push(cpu.de); break;
        case 0xD6: alu.Sub(cpu.GetByte()); break;
        case 0xD7: flow.Rst(2); break;
        case 0xD8: flow.Ret(Condition::C); break;
        case 0xD9: flow.Reti(); break;
        case 0xDA: flow.Jump(Condition::C, cpu.GetWord()); break;
        case 0xDB: break; /* Invalid */
        case 0xDC: flow.Call(Condition::C, cpu.GetWord()); break;
        case 0xDD: break; /* Invalid */
        case 0xDE: alu.SubWithBorrow(cpu.GetByte()); break;
        case 0xDF: flow.Rst(3); break;
        case 0xE0: mem.Load(cpu.GetByte().IO(), cpu.a); break;
        case 0xE1: mem.Pop(cpu.hl); break;
        case 0xE2: mem.Load(cpu.c.IO(), cpu.a); break;
        case 0xE3: break; /* Invalid */
        case 0xE4: break; /* Invalid */
        case 0xE5: mem.Push(cpu.hl); break;
        case 0xE6: alu.And(cpu.GetByte()); break;
        case 0xE7: flow.Rst(4); break;
        case 0xE8: alu.Add(cpu.sp, cpu.GetSignedByte()); break;
        case 0xE9: flow.Jump(cpu.hl); break;
        case 0xEA: mem.Load(cpu.GetWord(), cpu.a); break;
        case 0xEB: break; /* Invalid */
        case 0xEC: break; /* Invalid */
        case 0xED: break; /* Invalid */
        case 0xEE: alu.Xor(cpu.GetByte()); break;
        case 0xEF: flow.Rst(5); break;
        case 0xF0: mem.Load(cpu.a, cpu.GetByte().IO()); break;
        case 0xF1: mem.PopAf(); break;
        case 0xF2: mem.Load(cpu.a, cpu.c.IO()); break;
        case 0xF3: spec.Di(); break;
        case 0xF4: break; /* Invalid */
        case 0xF5: mem.Push(cpu.af); break;
        case 0xF6: alu.Or(cpu.GetByte()); break;
        case 0xF7: flow.Rst(6); break;
        case 0xF8: mem.Load(cpu.hl, cpu.sp, cpu.GetSignedByte()); break;
        case 0xF9: mem.Load(cpu.sp, cpu.hl); break;
        case 0xFA: mem.Load(cpu.a, cpu.GetWord()); break;
        case 0xFB: spec.Ei(); break;
        case 0xFC: break; /* Invalid */
        case 0xFD: break; /* Invalid */
        case 0xFE: alu.Cmp(cpu.GetByte()); break;
        case 0xFF: flow.Rst(7); break;
        default: break;
    }
}

void Ops::ExecuteEx(const u8 opcode) {
    switch (opcode) {
        case 0x00: bit.Rlc(cpu.b); break;
        case 0x01: bit.Rlc(cpu.c); break;
        case 0x02: bit.Rlc(cpu.d); break;
        case 0x03: bit.Rlc(cpu.e); break;
        case 0x04: bit.Rlc(cpu.h); break;
        case 0x05: bit.Rlc(cpu.l); break;
        case 0x06: bit.Rlc(cpu.hl); break;
        case 0x07: bit.Rlc(cpu.a); break;
        case 0x08: bit.Rrc(cpu.b); break;
        case 0x09: bit.Rrc(cpu.c); break;
        case 0x0A: bit.Rrc(cpu.d); break;
        case 0x0B: bit.Rrc(cpu.e); break;
        case 0x0C: bit.Rrc(cpu.h); break;
        case 0x0D: bit.Rrc(cpu.l); break;
        case 0x0E: bit.Rrc(cpu.hl); break;
        case 0x0F: bit.Rrc(cpu.a); break;
        case 0x10: bit.Rl(cpu.b); break;
        case 0x11: bit.Rl(cpu.c); break;
        case 0x12: bit.Rl(cpu.d); break;
        case 0x13: bit.Rl(cpu.e); break;
        case 0x14: bit.Rl(cpu.h); break;
        case 0x15: bit.Rl(cpu.l); break;
        case 0x16: bit.Rl(cpu.hl); break;
        case 0x17: bit.Rl(cpu.a); break;
        case 0x18: bit.Rr(cpu.b); break;
        case 0x19: bit.Rr(cpu.c); break;
        case 0x1A: bit.Rr(cpu.d); break;
        case 0x1B: bit.Rr(cpu.e); break;
        case 0x1C: bit.Rr(cpu.h); break;
        case 0x1D: bit.Rr(cpu.l); break;
        case 0x1E: bit.Rr(cpu.hl); break;
        case 0x1F: bit.Rr(cpu.a); break;
        case 0x20: bit.Sla(cpu.b); break;
        case 0x21: bit.Sla(cpu.c); break;
        case 0x22: bit.Sla(cpu.d); break;
        case 0x23: bit.Sla(cpu.e); break;
        case 0x24: bit.Sla(cpu.h); break;
        case 0x25: bit.Sla(cpu.l); break;
        case 0x26: bit.Sla(cpu.hl); break;
        case 0x27: bit.Sla(cpu.a); break;
        case 0x28: bit.Sra(cpu.b); break;
        case 0x29: bit.Sra(cpu.c); break;
        case 0x2A: bit.Sra(cpu.d); break;
        case 0x2B: bit.Sra(cpu.e); break;
        case 0x2C: bit.Sra(cpu.h); break;
        case 0x2D: bit.Sra(cpu.l); break;
        case 0x2E: bit.Sra(cpu.hl); break;
        case 0x2F: bit.Sra(cpu.a); break;
        case 0x30: bit.Swap(cpu.b); break;
        case 0x31: bit.Swap(cpu.c); break;
        case 0x32: bit.Swap(cpu.d); break;
        case 0x33: bit.Swap(cpu.e); break;
        case 0x34: bit.Swap(cpu.h); break;
        case 0x35: bit.Swap(cpu.l); break;
        case 0x36: bit.Swap(cpu.hl); break;
        case 0x37: bit.Swap(cpu.a); break;
        case 0x38: bit.Srl(cpu.b); break;
        case 0x39: bit.Srl(cpu.c); break;
        case 0x3A: bit.Srl(cpu.d); break;
        case 0x3B: bit.Srl(cpu.e); break;
        case 0x3C: bit.Srl(cpu.h); break;
        case 0x3D: bit.Srl(cpu.l); break;
        case 0x3E: bit.Srl(cpu.hl); break;
        case 0x3F: bit.Srl(cpu.a); break;
        case 0x40: bit.Bit(cpu.b, 0); break;
        case 0x41: bit.Bit(cpu.c, 0); break;
        case 0x42: bit.Bit(cpu.d, 0); break;
        case 0x43: bit.Bit(cpu.e, 0); break;
        case 0x44: bit.Bit(cpu.h, 0); break;
        case 0x45: bit.Bit(cpu.l, 0); break;
        case 0x46: bit.Bit(cpu.hl, 0); break;
        case 0x47: bit.Bit(cpu.a, 0); break;
        case 0x48: bit.Bit(cpu.b, 1); break;
        case 0x49: bit.Bit(cpu.c, 1); break;
        case 0x4A: bit.Bit(cpu.d, 1); break;
        case 0x4B: bit.Bit(cpu.e, 1); break;
        case 0x4C: bit.Bit(cpu.h, 1); break;
        case 0x4D: bit.Bit(cpu.l, 1); break;
        case 0x4E: bit.Bit(cpu.hl, 1); break;
        case 0x4F: bit.Bit(cpu.a, 1); break;
        case 0x50: bit.Bit(cpu.b, 2); break;
        case 0x51: bit.Bit(cpu.c, 2); break;
        case 0x52: bit.Bit(cpu.d, 2); break;
        case 0x53: bit.Bit(cpu.e, 2); break;
        case 0x54: bit.Bit(cpu.h, 2); break;
        case 0x55: bit.Bit(cpu.l, 2); break;
        case 0x56: bit.Bit(cpu.hl, 2); break;
        case 0x57: bit.Bit(cpu.a, 2); break;
        case 0x58: bit.Bit(cpu.b, 3); break;
        case 0x59: bit.Bit(cpu.c, 3); break;
        case 0x5A: bit.Bit(cpu.d, 3); break;
        case 0x5B: bit.Bit(cpu.e, 3); break;
        case 0x5C: bit.Bit(cpu.h, 3); break;
        case 0x5D: bit.Bit(cpu.l, 3); break;
        case 0x5E: bit.Bit(cpu.hl, 3); break;
        case 0x5F: bit.Bit(cpu.a, 3); break;
        case 0x60: bit.Bit(cpu.b, 4); break;
        case 0x61: bit.Bit(cpu.c, 4); break;
        case 0x62: bit.Bit(cpu.d, 4); break;
        case 0x63: bit.Bit(cpu.e, 4); break;
        case 0x64: bit.Bit(cpu.h, 4); break;
        case 0x65: bit.Bit(cpu.l, 4); break;
        case 0x66: bit.Bit(cpu.hl, 4); break;
        case 0x67: bit.Bit(cpu.a, 4); break;
        case 0x68: bit.Bit(cpu.b, 5); break;
        case 0x69: bit.Bit(cpu.c, 5); break;
        case 0x6A: bit.Bit(cpu.d, 5); break;
        case 0x6B: bit.Bit(cpu.e, 5); break;
        case 0x6C: bit.Bit(cpu.h, 5); break;
        case 0x6D: bit.Bit(cpu.l, 5); break;
        case 0x6E: bit.Bit(cpu.hl, 5); break;
        case 0x6F: bit.Bit(cpu.a, 5); break;
        case 0x70: bit.Bit(cpu.b, 6); break;
        case 0x71: bit.Bit(cpu.c, 6); break;
        case 0x72: bit.Bit(cpu.d, 6); break;
        case 0x73: bit.Bit(cpu.e, 6); break;
        case 0x74: bit.Bit(cpu.h, 6); break;
        case 0x75: bit.Bit(cpu.l, 6); break;
        case 0x76: bit.Bit(cpu.hl, 6); break;
        case 0x77: bit.Bit(cpu.a, 6); break;
        case 0x78: bit.Bit(cpu.b, 7); break;
        case 0x79: bit.Bit(cpu.c, 7); break;
        case 0x7A: bit.Bit(cpu.d, 7); break;
        case 0x7B: bit.Bit(cpu.e, 7); break;
        case 0x7C: bit.Bit(cpu.h, 7); break;
        case 0x7D: bit.Bit(cpu.l, 7); break;
        case 0x7E: bit.Bit(cpu.hl, 7); break;
        case 0x7F: bit.Bit(cpu.a, 7); break;
        case 0x80: bit.Res(cpu.b, 0); break;
        case 0x81: bit.Res(cpu.c, 0); break;
        case 0x82: bit.Res(cpu.d, 0); break;
        case 0x83: bit.Res(cpu.e, 0); break;
        case 0x84: bit.Res(cpu.h, 0); break;
        case 0x85: bit.Res(cpu.l, 0); break;
        case 0x86: bit.Res(cpu.hl, 0); break;
        case 0x87: bit.Res(cpu.a, 0); break;
        case 0x88: bit.Res(cpu.b, 1); break;
        case 0x89: bit.Res(cpu.c, 1); break;
        case 0x8A: bit.Res(cpu.d, 1); break;
        case 0x8B: bit.Res(cpu.e, 1); break;
        case 0x8C: bit.Res(cpu.h, 1); break;
        case 0x8D: bit.Res(cpu.l, 1); break;
        case 0x8E: bit.Res(cpu.hl, 1); break;
        case 0x8F: bit.Res(cpu.a, 1); break;
        case 0x90: bit.Res(cpu.b, 2); break;
        case 0x91: bit.Res(cpu.c, 2); break;
        case 0x92: bit.Res(cpu.d, 2); break;
        case 0x93: bit.Res(cpu.e, 2); break;
        case 0x94: bit.Res(cpu.h, 2); break;
        case 0x95: bit.Res(cpu.l, 2); break;
        case 0x96: bit.Res(cpu.hl, 2); break;
        case 0x97: bit.Res(cpu.a, 2); break;
        case 0x98: bit.Res(cpu.b, 3); break;
        case 0x99: bit.Res(cpu.c, 3); break;
        case 0x9A: bit.Res(cpu.d, 3); break;
        case 0x9B: bit.Res(cpu.e, 3); break;
        case 0x9C: bit.Res(cpu.h, 3); break;
        case 0x9D: bit.Res(cpu.l, 3); break;
        case 0x9E: bit.Res(cpu.hl, 3); break;
        case 0x9F: bit.Res(cpu.a, 3); break;
        case 0xA0: bit.Res(cpu.b, 4); break;
        case 0xA1: bit.Res(cpu.c, 4); break;
        case 0xA2: bit.Res(cpu.d, 4); break;
        case 0xA3: bit.Res(cpu.e, 4); break;
        case 0xA4: bit.Res(cpu.h, 4); break;
        case 0xA5: bit.Res(cpu.l, 4); break;
        case 0xA6: bit.Res(cpu.hl, 4); break;
        case 0xA7: bit.Res(cpu.a, 4); break;
        case 0xA8: bit.Res(cpu.b, 5); break;
        case 0xA9: bit.Res(cpu.c, 5); break;
        case 0xAA: bit.Res(cpu.d, 5); break;
        case 0xAB: bit.Res(cpu.e, 5); break;
        case 0xAC: bit.Res(cpu.h, 5); break;
        case 0xAD: bit.Res(cpu.l, 5); break;
        case 0xAE: bit.Res(cpu.hl, 5); break;
        case 0xAF: bit.Res(cpu.a, 5); break;
        case 0xB0: bit.Res(cpu.b, 6); break;
        case 0xB1: bit.Res(cpu.c, 6); break;
        case 0xB2: bit.Res(cpu.d, 6); break;
        case 0xB3: bit.Res(cpu.e, 6); break;
        case 0xB4: bit.Res(cpu.h, 6); break;
        case 0xB5: bit.Res(cpu.l, 6); break;
        case 0xB6: bit.Res(cpu.hl, 6); break;
        case 0xB7: bit.Res(cpu.a, 6); break;
        case 0xB8: bit.Res(cpu.b, 7); break;
        case 0xB9: bit.Res(cpu.c, 7); break;
        case 0xBA: bit.Res(cpu.d, 7); break;
        case 0xBB: bit.Res(cpu.e, 7); break;
        case 0xBC: bit.Res(cpu.h, 7); break;
        case 0xBD: bit.Res(cpu.l, 7); break;
        case 0xBE: bit.Res(cpu.hl, 7); break;
        case 0xBF: bit.Res(cpu.a, 7); break;
        case 0xC0: bit.Set(cpu.b, 0); break;
        case 0xC1: bit.Set(cpu.c, 0); break;
        case 0xC2: bit.Set(cpu.d, 0); break;
        case 0xC3: bit.Set(cpu.e, 0); break;
        case 0xC4: bit.Set(cpu.h, 0); break;
        case 0xC5: bit.Set(cpu.l, 0); break;
        case 0xC6: bit.Set(cpu.hl, 0); break;
        case 0xC7: bit.Set(cpu.a, 0); break;
        case 0xC8: bit.Set(cpu.b, 1); break;
        case 0xC9: bit.Set(cpu.c, 1); break;
        case 0xCA: bit.Set(cpu.d, 1); break;
        case 0xCB: bit.Set(cpu.e, 1); break;
        case 0xCC: bit.Set(cpu.h, 1); break;
        case 0xCD: bit.Set(cpu.l, 1); break;
        case 0xCE: bit.Set(cpu.hl, 1); break;
        case 0xCF: bit.Set(cpu.a, 1); break;
        case 0xD0: bit.Set(cpu.b, 2); break;
        case 0xD1: bit.Set(cpu.c, 2); break;
        case 0xD2: bit.Set(cpu.d, 2); break;
        case 0xD3: bit.Set(cpu.e, 2); break;
        case 0xD4: bit.Set(cpu.h, 2); break;
        case 0xD5: bit.Set(cpu.l, 2); break;
        case 0xD6: bit.Set(cpu.hl, 2); break;
        case 0xD7: bit.Set(cpu.a, 2); break;
        case 0xD8: bit.Set(cpu.b, 3); break;
        case 0xD9: bit.Set(cpu.c, 3); break;
        case 0xDA: bit.Set(cpu.d, 3); break;
        case 0xDB: bit.Set(cpu.e, 3); break;
        case 0xDC: bit.Set(cpu.h, 3); break;
        case 0xDD: bit.Set(cpu.l, 3); break;
        case 0xDE: bit.Set(cpu.hl, 3); break;
        case 0xDF: bit.Set(cpu.a, 3); break;
        case 0xE0: bit.Set(cpu.b, 4); break;
        case 0xE1: bit.Set(cpu.c, 4); break;
        case 0xE2: bit.Set(cpu.d, 4); break;
        case 0xE3: bit.Set(cpu.e, 4); break;
        case 0xE4: bit.Set(cpu.h, 4); break;
        case 0xE5: bit.Set(cpu.l, 4); break;
        case 0xE6: bit.Set(cpu.hl, 4); break;
        case 0xE7: bit.Set(cpu.a, 4); break;
        case 0xE8: bit.Set(cpu.b, 5); break;
        case 0xE9: bit.Set(cpu.c, 5); break;
        case 0xEA: bit.Set(cpu.d, 5); break;
        case 0xEB: bit.Set(cpu.e, 5); break;
        case 0xEC: bit.Set(cpu.h, 5); break;
        case 0xED: bit.Set(cpu.l, 5); break;
        case 0xEE: bit.Set(cpu.hl, 5); break;
        case 0xEF: bit.Set(cpu.a, 5); break;
        case 0xF0: bit.Set(cpu.b, 6); break;
        case 0xF1: bit.Set(cpu.c, 6); break;
        case 0xF2: bit.Set(cpu.d, 6); break;
        case 0xF3: bit.Set(cpu.e, 6); break;
        case 0xF4: bit.Set(cpu.h, 6); break;
        case 0xF5: bit.Set(cpu.l, 6); break;
        case 0xF6: bit.Set(cpu.hl, 6); break;
        case 0xF7: bit.Set(cpu.a, 6); break;
        case 0xF8: bit.Set(cpu.b, 7); break;
        case 0xF9: bit.Set(cpu.c, 7); break;
        case 0xFA: bit.Set(cpu.d, 7); break;
        case 0xFB: bit.Set(cpu.e, 7); break;
        case 0xFC: bit.Set(cpu.h, 7); break;
        case 0xFD: bit.Set(cpu.l, 7); break;
        case 0xFE: bit.Set(cpu.hl, 7); break;
        case 0xFF: bit.Set(cpu.a, 7); break;
        default: break;
    }
}

}
